# -*- coding: utf-8 -*-

################################################################################
## Form generated from reading UI file 'PyRssReaderWindow.ui'
##
## Created by: Qt User Interface Compiler version 6.8.2
##
## WARNING! All changes made in this file will be lost when recompiling UI file!
################################################################################

from PySide6.QtCore import (QCoreApplication, QDate, QDateTime, QLocale,
    QMetaObject, QObject, QPoint, QRect,
    QSize, QTime, QUrl, Qt)
from PySide6.QtGui import (QAction, QBrush, QColor, QConicalGradient,
    QCursor, QFont, QFontDatabase, QGradient,
    QIcon, QImage, QKeySequence, QLinearGradient,
    QPainter, QPalette, QPixmap, QRadialGradient,
    QTransform)
from PySide6.QtWidgets import (QAbstractItemView, QApplication, QFrame, QHBoxLayout,
    QHeaderView, QLabel, QMainWindow, QMenu,
    QMenuBar, QSizePolicy, QSplitter, QStatusBar,
    QToolBar, QTreeView, QTreeWidget, QTreeWidgetItem,
    QVBoxLayout, QWidget)
import PyRssReader_rc

class Ui_RssReaderWindow(object):
    def setupUi(self, RssReaderWindow):
        if not RssReaderWindow.objectName():
            RssReaderWindow.setObjectName(u"RssReaderWindow")
        RssReaderWindow.resize(915, 744)
        icon = QIcon()
        icon.addFile(u":/RssReader/Resources/RssReader.ico", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        RssReaderWindow.setWindowIcon(icon)
        self.actionExit = QAction(RssReaderWindow)
        self.actionExit.setObjectName(u"actionExit")
        self.actionUpdate_Feeds = QAction(RssReaderWindow)
        self.actionUpdate_Feeds.setObjectName(u"actionUpdate_Feeds")
        self.actionAdd_Feed = QAction(RssReaderWindow)
        self.actionAdd_Feed.setObjectName(u"actionAdd_Feed")
        self.actionPurge_Old_News = QAction(RssReaderWindow)
        self.actionPurge_Old_News.setObjectName(u"actionPurge_Old_News")
        self.actionPreferences = QAction(RssReaderWindow)
        self.actionPreferences.setObjectName(u"actionPreferences")
        self.actionNo_Groups = QAction(RssReaderWindow)
        self.actionNo_Groups.setObjectName(u"actionNo_Groups")
        self.actionNo_Groups.setCheckable(True)
        self.actionNo_Groups.setChecked(True)
        self.actionDate = QAction(RssReaderWindow)
        self.actionDate.setObjectName(u"actionDate")
        self.actionDate.setCheckable(True)
        self.actionAbout_Qt = QAction(RssReaderWindow)
        self.actionAbout_Qt.setObjectName(u"actionAbout_Qt")
        self.actionAbout_RssReader = QAction(RssReaderWindow)
        self.actionAbout_RssReader.setObjectName(u"actionAbout_RssReader")
        self.actionOpen_Enclosure_Directory = QAction(RssReaderWindow)
        self.actionOpen_Enclosure_Directory.setObjectName(u"actionOpen_Enclosure_Directory")
        self.actionCreate_Global_Filter = QAction(RssReaderWindow)
        self.actionCreate_Global_Filter.setObjectName(u"actionCreate_Global_Filter")
        self.actionEdit_Language_Filter = QAction(RssReaderWindow)
        self.actionEdit_Language_Filter.setObjectName(u"actionEdit_Language_Filter")
        self.actionExport_OPML = QAction(RssReaderWindow)
        self.actionExport_OPML.setObjectName(u"actionExport_OPML")
        self.actionEdit_Ad_Filter = QAction(RssReaderWindow)
        self.actionEdit_Ad_Filter.setObjectName(u"actionEdit_Ad_Filter")
        self.actionImport_OPML = QAction(RssReaderWindow)
        self.actionImport_OPML.setObjectName(u"actionImport_OPML")
        self.actionAdd_to_Pocket = QAction(RssReaderWindow)
        self.actionAdd_to_Pocket.setObjectName(u"actionAdd_to_Pocket")
        icon1 = QIcon()
        icon1.addFile(u":/RssReader/Resources/pocket.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionAdd_to_Pocket.setIcon(icon1)
        self.centralWidget = QWidget(RssReaderWindow)
        self.centralWidget.setObjectName(u"centralWidget")
        self.verticalLayout_3 = QVBoxLayout(self.centralWidget)
        self.verticalLayout_3.setSpacing(3)
        self.verticalLayout_3.setContentsMargins(11, 11, 11, 11)
        self.verticalLayout_3.setObjectName(u"verticalLayout_3")
        self.verticalLayout_3.setContentsMargins(3, 3, 3, 3)
        self.horizSplitter = QSplitter(self.centralWidget)
        self.horizSplitter.setObjectName(u"horizSplitter")
        self.horizSplitter.setOrientation(Qt.Orientation.Horizontal)
        self.feedTree = QTreeWidget(self.horizSplitter)
        __qtreewidgetitem = QTreeWidgetItem()
        __qtreewidgetitem.setText(0, u"Feeds");
        self.feedTree.setHeaderItem(__qtreewidgetitem)
        self.feedTree.setObjectName(u"feedTree")
        self.feedTree.setContextMenuPolicy(Qt.ContextMenuPolicy.CustomContextMenu)
        self.feedTree.setDragDropMode(QAbstractItemView.DragDropMode.InternalMove)
        self.feedTree.setDefaultDropAction(Qt.DropAction.MoveAction)
        self.feedTree.setRootIsDecorated(False)
        self.feedTree.setItemsExpandable(False)
        self.horizSplitter.addWidget(self.feedTree)
        self.feedTree.header().setVisible(False)
        self.layoutWidget = QWidget(self.horizSplitter)
        self.layoutWidget.setObjectName(u"layoutWidget")
        self.verticalLayout_2 = QVBoxLayout(self.layoutWidget)
        self.verticalLayout_2.setSpacing(6)
        self.verticalLayout_2.setContentsMargins(11, 11, 11, 11)
        self.verticalLayout_2.setObjectName(u"verticalLayout_2")
        self.verticalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.feedTitleFrame = QFrame(self.layoutWidget)
        self.feedTitleFrame.setObjectName(u"feedTitleFrame")
        sizePolicy = QSizePolicy(QSizePolicy.Policy.Preferred, QSizePolicy.Policy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.feedTitleFrame.sizePolicy().hasHeightForWidth())
        self.feedTitleFrame.setSizePolicy(sizePolicy)
        self.feedTitleFrame.setMinimumSize(QSize(0, 40))
        self.feedTitleFrame.setMaximumSize(QSize(16777215, 40))
        self.feedTitleFrame.setStyleSheet(u"QFrame#feedTitleFrame {\n"
"background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:0 rgba(0, 200, 255, 150), stop:1 rgba(0, 0, 200, 175));\n"
"}")
        self.feedTitleFrame.setFrameShape(QFrame.Shape.NoFrame)
        self.feedTitleFrame.setFrameShadow(QFrame.Shadow.Plain)
        self.verticalLayout = QVBoxLayout(self.feedTitleFrame)
        self.verticalLayout.setSpacing(2)
        self.verticalLayout.setContentsMargins(11, 11, 11, 11)
        self.verticalLayout.setObjectName(u"verticalLayout")
        self.verticalLayout.setContentsMargins(2, 0, 2, 0)
        self.horizontalLayout = QHBoxLayout()
        self.horizontalLayout.setSpacing(6)
        self.horizontalLayout.setObjectName(u"horizontalLayout")
        self.feedImageLabel = QLabel(self.feedTitleFrame)
        self.feedImageLabel.setObjectName(u"feedImageLabel")
        sizePolicy.setHeightForWidth(self.feedImageLabel.sizePolicy().hasHeightForWidth())
        self.feedImageLabel.setSizePolicy(sizePolicy)
        self.feedImageLabel.setMinimumSize(QSize(32, 32))
        self.feedImageLabel.setMaximumSize(QSize(32, 32))
        self.feedImageLabel.setPixmap(QPixmap(u":/RssReader/Resources/RssReader.ico"))
        self.feedImageLabel.setScaledContents(False)
        self.feedImageLabel.setAlignment(Qt.AlignmentFlag.AlignCenter)

        self.horizontalLayout.addWidget(self.feedImageLabel)

        self.feedNameLabel = QLabel(self.feedTitleFrame)
        self.feedNameLabel.setObjectName(u"feedNameLabel")
        sizePolicy1 = QSizePolicy(QSizePolicy.Policy.Preferred, QSizePolicy.Policy.Preferred)
        sizePolicy1.setHorizontalStretch(1)
        sizePolicy1.setVerticalStretch(0)
        sizePolicy1.setHeightForWidth(self.feedNameLabel.sizePolicy().hasHeightForWidth())
        self.feedNameLabel.setSizePolicy(sizePolicy1)
        font = QFont()
        font.setFamilies([u"Arial"])
        font.setPointSize(14)
        font.setBold(True)
        self.feedNameLabel.setFont(font)
        self.feedNameLabel.setStyleSheet(u"color: rgb(255, 255, 255);")

        self.horizontalLayout.addWidget(self.feedNameLabel)


        self.verticalLayout.addLayout(self.horizontalLayout)


        self.verticalLayout_2.addWidget(self.feedTitleFrame)

        self.vertSplitter = QSplitter(self.layoutWidget)
        self.vertSplitter.setObjectName(u"vertSplitter")
        self.vertSplitter.setOrientation(Qt.Orientation.Vertical)
        self.titleTree = QTreeView(self.vertSplitter)
        self.titleTree.setObjectName(u"titleTree")
        self.titleTree.setContextMenuPolicy(Qt.ContextMenuPolicy.CustomContextMenu)
        self.titleTree.setEditTriggers(QAbstractItemView.EditTrigger.NoEditTriggers)
        self.titleTree.setProperty(u"showDropIndicator", False)
        self.titleTree.setSelectionBehavior(QAbstractItemView.SelectionBehavior.SelectRows)
        self.titleTree.setSortingEnabled(True)
        self.titleTree.setAnimated(True)
        self.vertSplitter.addWidget(self.titleTree)
        self.titleTree.header().setStretchLastSection(True)

        self.verticalLayout_2.addWidget(self.vertSplitter)

        self.horizSplitter.addWidget(self.layoutWidget)

        self.verticalLayout_3.addWidget(self.horizSplitter)

        RssReaderWindow.setCentralWidget(self.centralWidget)
        self.menuBar = QMenuBar(RssReaderWindow)
        self.menuBar.setObjectName(u"menuBar")
        self.menuBar.setGeometry(QRect(0, 0, 915, 33))
        self.menuExit = QMenu(self.menuBar)
        self.menuExit.setObjectName(u"menuExit")
        self.menuGroup_By = QMenu(self.menuBar)
        self.menuGroup_By.setObjectName(u"menuGroup_By")
        self.menuHelp = QMenu(self.menuBar)
        self.menuHelp.setObjectName(u"menuHelp")
        RssReaderWindow.setMenuBar(self.menuBar)
        self.mainToolBar = QToolBar(RssReaderWindow)
        self.mainToolBar.setObjectName(u"mainToolBar")
        RssReaderWindow.addToolBar(Qt.ToolBarArea.TopToolBarArea, self.mainToolBar)
        self.statusBar = QStatusBar(RssReaderWindow)
        self.statusBar.setObjectName(u"statusBar")
        RssReaderWindow.setStatusBar(self.statusBar)

        self.menuBar.addAction(self.menuExit.menuAction())
        self.menuBar.addAction(self.menuGroup_By.menuAction())
        self.menuBar.addAction(self.menuHelp.menuAction())
        self.menuExit.addAction(self.actionPreferences)
        self.menuExit.addAction(self.actionOpen_Enclosure_Directory)
        self.menuExit.addSeparator()
        self.menuExit.addAction(self.actionImport_OPML)
        self.menuExit.addAction(self.actionExport_OPML)
        self.menuExit.addSeparator()
        self.menuExit.addAction(self.actionExit)
        self.menuExit.addSeparator()
        self.menuGroup_By.addAction(self.actionNo_Groups)
        self.menuGroup_By.addAction(self.actionDate)
        self.menuHelp.addAction(self.actionAbout_Qt)
        self.menuHelp.addAction(self.actionAbout_RssReader)
        self.mainToolBar.addAction(self.actionAdd_Feed)
        self.mainToolBar.addAction(self.actionUpdate_Feeds)
        self.mainToolBar.addAction(self.actionPurge_Old_News)
        self.mainToolBar.addAction(self.actionCreate_Global_Filter)
        self.mainToolBar.addAction(self.actionEdit_Language_Filter)
        self.mainToolBar.addAction(self.actionEdit_Ad_Filter)
        self.mainToolBar.addAction(self.actionAdd_to_Pocket)

        self.retranslateUi(RssReaderWindow)
        self.actionExit.triggered.connect(RssReaderWindow.close)

        QMetaObject.connectSlotsByName(RssReaderWindow)
    # setupUi

    def retranslateUi(self, RssReaderWindow):
        RssReaderWindow.setWindowTitle(QCoreApplication.translate("RssReaderWindow", u"RssReader", None))
        self.actionExit.setText(QCoreApplication.translate("RssReaderWindow", u"Exit", None))
        self.actionUpdate_Feeds.setText(QCoreApplication.translate("RssReaderWindow", u"Update Feeds", None))
        self.actionAdd_Feed.setText(QCoreApplication.translate("RssReaderWindow", u"Add Feed", None))
        self.actionPurge_Old_News.setText(QCoreApplication.translate("RssReaderWindow", u"Purge Old News", None))
        self.actionPreferences.setText(QCoreApplication.translate("RssReaderWindow", u"Preferences...", None))
        self.actionNo_Groups.setText(QCoreApplication.translate("RssReaderWindow", u"No Groups", None))
        self.actionDate.setText(QCoreApplication.translate("RssReaderWindow", u"Date", None))
        self.actionAbout_Qt.setText(QCoreApplication.translate("RssReaderWindow", u"About Qt...", None))
        self.actionAbout_RssReader.setText(QCoreApplication.translate("RssReaderWindow", u"About RssReader...", None))
        self.actionOpen_Enclosure_Directory.setText(QCoreApplication.translate("RssReaderWindow", u"Open Enclosure Directory", None))
        self.actionCreate_Global_Filter.setText(QCoreApplication.translate("RssReaderWindow", u"Manage Global Filters", None))
        self.actionEdit_Language_Filter.setText(QCoreApplication.translate("RssReaderWindow", u"Edit Language Filter", None))
        self.actionExport_OPML.setText(QCoreApplication.translate("RssReaderWindow", u"Export OPML...", None))
        self.actionEdit_Ad_Filter.setText(QCoreApplication.translate("RssReaderWindow", u"Edit Ad Filter", None))
        self.actionImport_OPML.setText(QCoreApplication.translate("RssReaderWindow", u"Import OPML...", None))
        self.actionAdd_to_Pocket.setText(QCoreApplication.translate("RssReaderWindow", u"Add to Pocket", None))
#if QT_CONFIG(tooltip)
        self.actionAdd_to_Pocket.setToolTip(QCoreApplication.translate("RssReaderWindow", u"Adds the current article to Pocket", None))
#endif // QT_CONFIG(tooltip)
        self.feedImageLabel.setText("")
        self.feedNameLabel.setText(QCoreApplication.translate("RssReaderWindow", u"Feed Name", None))
        self.menuExit.setTitle(QCoreApplication.translate("RssReaderWindow", u"File", None))
        self.menuGroup_By.setTitle(QCoreApplication.translate("RssReaderWindow", u"Group By", None))
        self.menuHelp.setTitle(QCoreApplication.translate("RssReaderWindow", u"Help", None))
    # retranslateUi

